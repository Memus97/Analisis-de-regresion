install.packages("ggplot2")
library("ggplot2")

# Matriz.
v1<-c(.4,.42,.48,.51,.57,.60,.70,.75,.75,.78,.84,.95,.99,1.03,1.12,1.15,1.20,1.25,1.25,1.28,1.30,1.34,1.37 ,1.40,1.43,1.46,1.49,1.55,1.58,1.60)
v2<-c(1.02,1.21,.88,.98,1.52,1.83,1.50,1.80,1.74,1.63,2.00,2.80,2.48,2.47,3.05,3.18,3.76,3.68,3.82,3.21,4.27
      ,3.12,3.99,3.75,4.10,4.18,3.77,4.34,4.21,4.92)
Datos.1<-data.frame(v1,v2)
Datos.1

pdf("Grafico1.pdf")
ggplot(Datos.1, aes(x=v1,y=v2))+geom_point()+ggtitle("Diagrama de Dispersion")+xlab("Variable independiente x")+ylab("Variable dependiente y")+geom_smooth(method = lm)
dev.off()


#i) Tipo de relación: Positiva
#ii) Identificar "outliers"
pdf("Grafico2.pdf")
num.outliers<-2

##Ordenar los datos de mayor a menor distancia según la métrica de Mahalanobis
mah.ordenacion <- order(mahalanobis(Datos.1 , colMeans(Datos.1), cov(Datos.1)), decreasing=TRUE)
outlier2<-rep(FALSE,nrow(Datos.1))

##Generamos un vector booleano de los dos valores más alejados según la distancia de Mahalanobis
outlier2[mah.ordenacion[1:num.outliers]]<-TRUE

colorear.outlier<-outlier2*16

plot(Datos.1, pch=0,main="Outliders Identificados")+points(Datos.1, pch=colorear.outlier)
dev.off()

# iii) Fuerza de la Relación: Alta
#iv) Eliminar "outliers" identificados
pdf("Grafico3.pdf")
Grafico_sin_outliders<-Datos.1[-c(22,21),]
ggplot(Grafico_sin_outliders, aes(x=v1,y=v2))+geom_point()+ggtitle("Diagrama de Dispersion sin outliders")+xlab("Variable independiente x")+ylab("Variable dependiente y")+geom_smooth(method = lm)
dev.off()
